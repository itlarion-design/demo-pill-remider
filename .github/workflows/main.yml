name: build & release
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

env:
  flutter-version: "3.32.7"
  FLUTTER_TOOLS_CACHE: |
    /opt/hostedtoolcache/flutter/stable-3.32.7-x64/packages/flutter_tools
  BUILD_CACHE: |
    build
    .dart_tool
  PUB_CACHE: ~/.pub-cache
jobs:
  build-release:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17.0.9"
          cache: "gradle"

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter-version }}

      - name: fluttertools cache
        uses: actions/cache@v3
        with:
          path: ${{ env.FLUTTER_TOOLS_CACHE }}
          key: fluttertools-cache-v${{ env.flutter-version }}
          restore-keys: |
            fluttertools-cache-v${{ env.flutter-version }}
            fluttertools-cache-

      - name: pub cache
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: pub-cache-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            pub-cache-${{ hashFiles('pubspec.lock') }}
            pub-cache-

      - name: build cache
        uses: actions/cache@v3
        with:
          path: ${{ env.BUILD_CACHE }}
          key: build-cache-${{ hashFiles('**/*') }}
          restore-keys: build-cache-
        
      - run: |
          # build release aab

          ## environment setup

          app_ver=$(grep 'version:' pubspec.yaml)
          app_ver=$(echo "${app_ver/'version:'/}" | xargs)
          app_ver="${app_ver%%+*}"
          echo "v$app_ver"
          echo "app_ver=$app_ver" >> $GITHUB_ENV

          mkdir artifacts && {
            ARTIFACTS_PATH="$GITHUB_WORKSPACE/artifacts"
            echo "ARTIFACTS_PATH=$ARTIFACTS_PATH" >> $GITHUB_ENV
          }

          echo "$JAVA_KEYSTORE" | base64 -d > android/app/upload-keystore.jks
          echo "$JAVA_KEYSTORE_PROPERTIES" | base64 -d > android/keystore.properties

          ## build

          flutter pub get

          flutter build appbundle --release
          mv build/app/outputs/bundle/release/app-release.aab "$ARTIFACTS_PATH/$APP_NAME-$app_ver.aab"
        shell: bash
        env:
          JAVA_KEYSTORE: ${{ secrets.JAVA_KEYSTORE }}
          JAVA_KEYSTORE_PROPERTIES: ${{ secrets.JAVA_KEYSTORE_PROPERTIES }}
          APP_NAME: ${{ github.event.repository.name }}

      - name: Upload build artifacts to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ env.ARTIFACTS_PATH }}/*.aab
          token: ${{ secrets.TOKEN }}

      - name: Upload build artifacts to workflow
        uses: actions/upload-artifact@v4
        with:
          name: v${{ env.app_ver }}
          path: ${{ env.ARTIFACTS_PATH }}/*.aab

                # ----------- BƯỚC THÊM MỚI ĐỂ UPLOAD AAB LÊN GOOGLE PLAY -----------
      - name: Upload AAB to Google Play Internal Test
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_JSON }}
          packageName: com.moazsalem.pills_reminder_pro
          releaseFiles: ${{ env.ARTIFACTS_PATH }}/${{ env.APP_NAME }}-${{ env.app_ver }}.aab
          track: internal
